{
	"$schema":
		"https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Facility Service Definition",
	"patterns": [
		{
			"include": "#comment"
		},
		{
			"include": "#attribute-section"
		},
		{
			"include": "#service-declaration"
		},
		{
			"include": "#markdown"
		}
	],
	"repository": {
		"attribute-section": {
			"begin": "\\[\\s*(?=([a-zA-Z_][a-zA-Z_0-9]*)\\b)",
			"beginCaptures": {
				"1": {
					"name": "entity.name.type.attribute.fsd"
				}
			},
			"end": "\\]",
			"patterns": [
				{
					"include": "#attribute"
				},
				{
					"include": "#attribute-parameters"
				}
			]
		},
		"attribute": {
			"match": "([a-zA-Z_][a-zA-Z_0-9]*)\\b",
			"name": "entity.name.type.attribute.fsd",
			"patterns": [
			]
		},
		"attribute-parameters": {
			"begin": "(\\()",
			"beginCaptures": {
				"1": {
					"name": "punctuation.parenthesis.open.fsd"
				}
			},
			"end": "(\\))",
			"endCaptures": {
				"1": {
					"name": "punctuation.parenthesis.close.fsd"
				}
			},
			"patterns": [
				{
					"begin": "([a-zA-Z_][a-zA-Z_0-9]*)\\s*:",
					"beginCaptures": {
						"1": {
							"name": "entity.other.attribute.parameter-name.fsd"
						}
					},
					"end": "(?=[,)])",
					"patterns": [
						{
							"include": "#strings"
						},
						{
							"match": "[a-zA-Z_0-9]+",
							"name": "constant.other.attribute.parameter-value.fsd"
						}
					]
				}
			]
		},
		"service-declaration": {
			"name": "meta.service.fsd",
			"begin": "(?=\\bservice\\b)",
      "end": "(?<=\\})|(?=^#\\s+)",
			"patterns": [
				{
					"match": "\\b(service)\\s+([a-zA-Z_][a-zA-Z_0-9]*)\\b",
					"captures": {
						"1": {
							"name": "keyword.other.service.fsd"
						},
						"2": {
							"name": "entity.name.type.service.fsd"
						}
					}
				},
				{
          "begin": "(\\{)|(;)",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.block.ts"
						}
					},
          "end": "(\\})|(?=^#\\s+)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.block.ts"
						}
					},
					"patterns": [
						{
							"include": "#comment"
						},
						{
							"include": "#attribute-section"
						},
						{
							"include": "#data-declaration"
						},
						{
							"include": "#enum-declaration"
						},
						{
							"include": "#errors-declaration"
						},
						{
							"include": "#extern-declaration"
						},
						{
							"include": "#method-declaration"
						}
					]
				}
			]
		},
		"data-declaration": {
			"name": "meta.data.fsd",
			"begin": "(?=\\bdata\\b)",
			"end": "(?<=\\})",
			"patterns": [
				{
					"match": "\\b(data)\\s+([a-zA-Z_][a-zA-Z_0-9]*)\\b",
					"captures": {
						"1": {
							"name": "keyword.other.data.fsd"
						},
						"2": {
							"name": "entity.name.type.data.fsd"
						}
					}
				},
				{
					"begin": "\\{",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.block.ts"
						}
					},
					"end": "\\}",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.block.ts"
						}
					},
					"patterns": [
						{
							"include": "#comment"
						},
						{
							"include": "#attribute-section"
						},
						{
							"include": "#member-declaration"
						}
					]
				}
			]
		},
		"enum-declaration": {
			"name": "meta.enum.fsd",
			"begin": "(?=\\benum\\b)",
			"end": "(?<=\\})",
			"patterns": [
				{
					"match": "\\b(enum)\\s+([a-zA-Z_][a-zA-Z_0-9]*)\\b",
					"captures": {
						"1": {
							"name": "keyword.other.enum.fsd"
						},
						"2": {
							"name": "entity.name.type.enum.fsd"
						}
					}
				},
				{
					"begin": "\\{",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.block.ts"
						}
					},
					"end": "\\}",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.block.ts"
						}
					},
					"patterns": [
						{
							"include": "#comment"
						},
						{
							"include": "#attribute-section"
						}
					]
				}
			]
		},
		"errors-declaration": {
			"name": "meta.errors.fsd",
			"begin": "(?=\\berrors\\b)",
			"end": "(?<=\\})",
			"patterns": [
				{
					"match": "\\b(errors)\\s+([a-zA-Z_][a-zA-Z_0-9]*)\\b",
					"captures": {
						"1": {
							"name": "keyword.other.errors.fsd"
						},
						"2": {
							"name": "entity.name.type.errors.fsd"
						}
					}
				},
				{
					"begin": "\\{",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.block.ts"
						}
					},
					"end": "\\}",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.block.ts"
						}
					},
					"patterns": [
						{
							"include": "#comment"
						},
						{
							"include": "#attribute-section"
						}
					]
				}
			]
		},
		"extern-declaration": {
			"name": "meta.extern.fsd",
			"begin": "(?=\\bextern\\s+\\b(data|enum)\\b)",
			"end": "(?<=;)",
			"patterns": [
				{
					"match": "\\b(extern)\\s+\\b(?:(data)|(enum))\\s+([a-zA-Z_][a-zA-Z_0-9]*)\\b",
					"captures": {
						"1": {
							"name": "keyword.other.extern.fsd"
						},
						"2": {
							"name": "keyword.other.data.fsd"
						},
						"3": {
							"name": "keyword.other.enum.fsd"
						},
						"4": {
							"name": "entity.name.type.data.fsd"
						}
					}
				}
			]
		},
		"method-declaration": {
			"name": "meta.method.fsd",
			"begin": "(?=\\bmethod\\b)",
			"end": "(?<=\\})",
			"patterns": [
				{
					"match": "\\b(method)\\s+([a-zA-Z_][a-zA-Z_0-9]*)\\b",
					"captures": {
						"1": {
							"name": "keyword.other.method.fsd"
						},
						"2": {
							"name": "entity.name.function.method.fsd"
						}
					}
				},
				{
					"begin": "\\{",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.block.ts"
						}
					},
					"end": "\\}(?!\\s*:)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.block.ts"
						}
					},
					"patterns": [
						{
							"include": "#comment"
						},
						{
							"include": "#attribute-section"
						},
						{
							"include": "#member-declaration"
						}
					]
				}
			]
		},
		"member-declaration": {
			"name": "meta.member.fsd",
			"begin": "\\b([a-zA-Z_][a-zA-Z_0-9]*):",
			"beginCaptures": {
				"1": {
					"1": {
						"name": "entity.name.type.member.fsd"
					}
				}
			},
			"end": ";",
			"patterns": [
				{
					"include": "#type"
				},
				{
					"match": "\\b([a-zA-Z_][a-zA-Z_0-9]*)\\b",
					"name": "entity.name.type.reference.fsd"
				}
			]
		},
		"type": {
			"name": "storage.type.builtin.fsd",
			"match": "\\b(boolean|bytes|decimal|double|error|int32|int64|map|object|result|string)\\b",
			"patterns": [
			]
		},
		"strings": {
			"name": "string.quoted.double.fsd",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.fsd",
					"match": "\\\\."
				}
			]
		},
		"comment": {
			"patterns": [
				{
					"name": "comment.line.double-slash.fsd",
					"begin": "(?<!/)//",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.fsd"
						}
					},
					"end": "(?=$)"
				}
			]
		},
		"markdown": {
			"name": "meta.heading.fsd",
			"begin": "^#\\s+([a-zA-Z_][a-zA-Z_0-9]*)\\b",
			"beginCaptures": {
				"0": {
					"name": "markup.heading.fsd"
				}
			},
			"end": "(?=^#\\s+)",
			"patterns": [
				{
				}
			]
		}
	},
	"scopeName": "source.fsd"
}
